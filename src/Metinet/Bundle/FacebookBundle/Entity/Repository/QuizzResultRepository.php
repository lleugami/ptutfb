<?php

namespace Metinet\Bundle\FacebookBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * QuizzResultRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class QuizzResultRepository extends EntityRepository
{
	/***
	 * Récupère la liste des quizz les plus populaires
	 */
	public function getTopQuizzPopulaires($limit, $ordre){
		
		if(isset($limit) && $limit > 0 && isset($ordre) && ($ordre == "ASC" || $ordre == "DESC")){
		    $arrayQuizz = array();
			$qb = $this->_em->createQueryBuilder();
			$qb->select('qr')
				->addSelect('COUNT(q.id) as nbTimesPlayed')
				->from('MetinetFacebookBundle:QuizzResult', 'qr')
				->leftJoin('qr.quizz', 'q')
				->groupBy('q.id')
				->orderBy('nbTimesPlayed', $ordre)
				->setMaxResults($limit);
				//var_dump($qb->getQuery()->getResult());
		
			
			$result =  $qb->getQuery()->getResult();
			foreach($result as $row){
				$quizz = $row[0]->getQuizz();
				$arrayQuizz[] = $quizz;
				//var_dump($quizz);die();
			}
		}
		return $arrayQuizz;
	}
	
	/***
	 * Récupère la somme des points total de tous les quizz
	 */
	public function getSommePoint() {
		
		$query = $this->getEntityManager()
		->createQuery('
                SELECT SUM(qr.winPoints) FROM MetinetFacebookBundle:QuizzResult qr'
		);
		try {
			$result = $query->getSingleResult();
		} catch (\Doctrine\ORM\NoResultException $e) {
			return null;
		}
		$bal = $result[1];
		return $bal;
	}
	
	/***
	 * Récupère une liste des quizz en cours d'éxecution
	 */
	public function getCountQuizzLancer() {

		$query = $this->getEntityManager()
		->createQuery('
                SELECT COUNT(qr) FROM MetinetFacebookBundle:QuizzResult qr
				 WHERE qr.dateEnd = :date_end'
		)->setParameter('date_end', '');
		try {
			$result = $query->getSingleResult();
		} catch (\Doctrine\ORM\NoResultException $e) {
			return null;
		}
		$bal = $result[1];
		return $bal;
	}
}
